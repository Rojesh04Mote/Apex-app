@use "library" as theme;

$themes: (
  default: (
    primary: theme.$primary-default,
    primary-dark: theme.$primary-default-dark,
    primary-light: theme.$primary-default-light,

    secondary: theme.$secondary-default,
    secondary-dark: theme.$secondary-default-dark,
    secondary-light: theme.$secondary-default-light,

    tertiary: theme.$tertiary-default,
    tertiary-dark: theme.$tertiary-default-dark,
    tertiary-light: theme.$tertiary-default-light,

    yellow: theme.$yellow-default,
    yellow-dark: theme.$yellow-default-dark,
    yellow-light: theme.$yellow-default-light,
  ),
  dark: (
    primary: #000,
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}